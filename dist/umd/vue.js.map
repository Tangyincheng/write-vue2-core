{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/paser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observer/schedule.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifeCycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/index.js"],"sourcesContent":["// 重写会导致数组本身发生变化的方法 push、shift、unshift、pop、reverse、sort、splice\r\n\r\n// 获取所有数组中的方法\r\nlet oldArrayMethods = Array.prototype;\r\n// value.__proto__ = arrayMethods  原型链查找\r\n// arrayMethods.__proto__ = oldArrayMethods\r\n\r\n// 数组中的方法拷贝\r\nexport const arrayMethods = Object.create(oldArrayMethods);\r\n\r\n// 需要重写的数组方法\r\nconst methods = [\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'pop',\r\n  'sort',\r\n  'splice',\r\n  'reverse'\r\n]\r\n\r\n// 对每一个方法进行重写\r\nmethods.forEach(method => {\r\n  arrayMethods[method] = function (...args) {\r\n    console.log('用户调用了push方法'); // AOP 切片编程\r\n    const result = oldArrayMethods[method].apply(this, args) // 调用原生的数组方法\r\n    // push unshift 添加的元素可能还是一个对象\r\n    let inserted; // 当前用户插入的元素\r\n    let ob = this.__ob__;\r\n    // 对push、unshift和splice这三个方法单独重写\r\n    // 因为这三个方法中添加的值可能又是一个对象，也需要做数据劫持\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice': // 3个  新增的属性 aplice有删除 新增的功能\r\n        inserted = args.splice(2)\r\n      default:\r\n        break;\r\n    }\r\n    if (inserted) {\r\n      // 对push、unshift和splice三个方法新增的值做数据劫持\r\n      ob.observeArray(inserted); // 将新增属性继续观测\r\n    }\r\n    ob.dep.notify(); // 如果用户调用了 push 方法 就通知当前这个dep更新\r\n    return result;\r\n  }\r\n})\r\n","let id = 0;\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++;\r\n    this.subs = [];  // age:[watcher, watcher]\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher); // 观察者模式\r\n  }\r\n  // 收集 Watcher\r\n  depend() {\r\n    //让这个watcher记住当前的dep,如果watcher没存过dep，dep肯定不能存过watcher\r\n    Dep.target.addDep(this);\r\n    // this.subs.push(Dep.target)  // 观察者模式\r\n  }\r\n  // 触发 Watcher\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update())\r\n  }\r\n}\r\nlet stack = [];\r\n// 目前可以做到 将watcher保留起来 和 移除的功能\r\nexport function pushTarget(watcher) {\r\n  // Dep.target === watcher\r\n  Dep.target = watcher;\r\n  stack.push(watcher);\r\n}\r\n\r\nexport function popTarget() {\r\n  stack.pop();\r\n  Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;\r\n","import { isObject } from '../util/index';\r\nimport { arrayMethods } from './array';\r\nimport Dep from './dep';\r\n// 把data中的数据 都使用Object.defineProperty重新定义 es5\r\n\r\nclass Observer {\r\n  constructor(value) { // 仅仅是初始化的操作\r\n\r\n    this.dep = new Dep(); // 这个dep是给数组用的\r\n\r\n    // 在value上添加 __ob__ 属性，该属性的值等于 this，即 Observer。\r\n    // 目的：为了在重写数组的方法中能够调用 observeArray。\r\n    // 这里设置 enumerable：false，是为了防止死循环，而造成内存移除\r\n    Object.defineProperty(value, \"__ob__\", {\r\n      enumerable: false,\r\n      configurable: true,\r\n      value: this\r\n    })\r\n    // 如果vue的数据层次过多，需要递归解析对象中的属性，依次增加set和get方法\r\n    if (Array.isArray(value)) {\r\n      value.__proto__ = arrayMethods;\r\n      this.observeArray(value);\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n\r\n  observeArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      observe(value[i]);\r\n    }\r\n  }\r\n\r\n  walk(data) {\r\n    let keys = Object.keys(data); // 拿到所有的key\r\n    keys.forEach(key => {\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  let dep = new Dep(); // 这个dep是给对象使用的\r\n  // 如果是多层级的对象，需要递归调用\r\n  let childOb = observe(value);\r\n  // 递归实现深度检测\r\n  // 这里这个value可能是数组 也可能是对象，返回的结果boserver的实例，当前这个value对应的observer\r\n  Object.defineProperty(data, key, {\r\n    configurable: true,\r\n    enumerable: true,\r\n    // 获取值的时候，做一些操作\r\n    get() {\r\n      // 每个属性都对应着自己的watcher\r\n      if (Dep.target) {\r\n        console.log('收集')\r\n        // 如果当前有watcher，则需要将watcher存起来\r\n        dep.depend();\r\n        // 数组的依赖收集\r\n        if (childOb) {\r\n          // 收集数组的相关依赖\r\n          childOb.dep.depend();\r\n          // 如果数组中还有数组\r\n          if (Array.isArray(value)) {\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    // 设置值的时候做一些操作\r\n    set(newValue) {\r\n      // 数据改变时，如果新数据等于旧的数据，则不做处理\r\n      if (newValue === value) return;\r\n      console.log('数据变化');\r\n      // 继续劫持用户设置的值，因为用户设置的的值也是一个对象\r\n      observe(newValue)\r\n      value = newValue;\r\n\r\n      dep.notify(); // 通知依赖的watcher更新操作\r\n    }\r\n  })\r\n}\r\n\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    // 将数组中的每一项都取出来，数据变化后 也需要更新试图\r\n    let current = value[i];\r\n    // 数组中的数组的依赖收集\r\n    current.__ob__ && current.__ob__.dep.depend();\r\n    if (Array.isArray(current)) {\r\n      dependArray(current);\r\n    }\r\n  }\r\n}\r\n\r\nexport function observe(data) {\r\n  // 如果data不是对象，则不做处理\r\n  if (!(typeof data === \"object\" && data !== null)) {\r\n    return;\r\n  }\r\n  return new Observer(data); // 用来观测数据\r\n}","import { observe } from './observer/index'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  // vue的数据来源 属性 方法 数据 计算属性 watch\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm)\r\n  }\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n}\r\n\r\nfunction initProps() { }\r\nfunction initMethod() { }\r\n\r\n// 取值时实现代理\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key]\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    }\r\n  })\r\n}\r\nfunction initData(vm) {\r\n  // 数据初始化工作\r\n  let data = vm.$options.data; // 用户传递的data\r\n  // 用户可以通过 vm._data 拿到data\r\n  // 用户传参中的data可以是函数的形式(函数返回一个对象)也可以是对象的形式，故做如下处理\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n  // 对象劫持  用户改变了数据 期望可以得到通知 => 刷新页面\r\n  // MVVM模式 数据变化可以驱动视图变化\r\n  // Object.defineProperty(): 给属性增加get方法和set方法\r\n\r\n  // 为了让用户更好的使用 可以直接vm.xxx\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n  observe(data); // 响应式原理\r\n\r\n}\r\nfunction initComputed() { }\r\nfunction initWatch() { }","// ?:匹配不捕获\r\n// arguments[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 匹配的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的</div>\r\n\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 > <div>\r\n\r\nexport function parseHTML(html) {\r\n  let root = null; // ast语法树的树根\r\n  let currentParent; // 标识当前父亲是谁\r\n  let stack = [];\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n\r\n  // 开始标签\r\n  function start(tagName, attrs) {\r\n    // 遇到开始标签 就创建一个ast元素\r\n    let element = createASTElement(tagName, attrs);\r\n    if (!root) {\r\n      root = element;\r\n    }\r\n    // 把当前元素标记成父ast树\r\n    currentParent = element;\r\n    // 将开始标签存放到栈中\r\n    stack.push(element);\r\n  }\r\n\r\n  // 文本\r\n  function chars(text) {\r\n    // 去掉空格\r\n    text = text.replace(/\\s/g, '');\r\n    if (text) {\r\n      currentParent.children.push({\r\n        text,\r\n        type: TEXT_TYPE\r\n      })\r\n    }\r\n  }\r\n\r\n  // 结束标签\r\n  function end(tagName) {\r\n    let element = stack.pop();  // 拿到的是ast对象\r\n    // 标识当前这个标签属于这个div的儿子\r\n    currentParent = stack[stack.length - 1];\r\n    if (currentParent) {\r\n      element.parent = currentParent;\r\n      currentParent.children.push(element); // 实现了一个树的父子关系\r\n    }\r\n  }\r\n\r\n  // 不停的解析html字符串\r\n  while (html) {\r\n    let textEnd = html.indexOf('<');\r\n    if (textEnd == 0) {\r\n      // 如果当前索引为0 肯定是一个标签 开始标签或者结束标签\r\n      let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs); // 1. 解析开始标签\r\n        continue; // 如果开始标签匹配完毕后，继续下一次匹配\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1]); // 2.解析结束标签\r\n        continue;\r\n      }\r\n    }\r\n    let text;\r\n    if (textEnd >= 0) {\r\n      text = html.substring(0, textEnd);\r\n    }\r\n    if (text) {\r\n      advance(text.length);\r\n      chars(text); // 3.解析文本\r\n    }\r\n  }\r\n\r\n  // 前进 n\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n\r\n  function parseStartTag() {\r\n    let start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      // 将标签删除\r\n      advance(start[0].length)\r\n\r\n      let end, attr;\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        // 解析属性\r\n        advance(attr[0].length); // 将属性去掉\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          // attr[3] 双引号属性值；attr[4] 单引号属性值；attr[5] 无引号属性值\r\n          value: attr[3] || attr[4] || attr[5]\r\n        })\r\n      }\r\n      // 去掉开始标签的 >\r\n      if (end) {\r\n        advance(end[0].length);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n  return root;\r\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  // 匹配 {{}}\r\n\r\n// children 中的内容解析\r\nfunction gen(node) {\r\n  if (node.type == 1) {\r\n    // 元素标签 递归解析\r\n    return generate(node);\r\n  } else {\r\n    // children 为文本\r\n    let text = node.text; // hello{{ name }} => \"hello\"+_s(name)\r\n    // 每次使用正则时将 lastIndex 归零\r\n    let lastIndex = defaultTagRE.lastIndex = 0;\r\n    let tokens = [];\r\n    let match, index = 0;\r\n    // 解析文本\r\n    while (match = defaultTagRE.exec(text)) {\r\n      index = match.index;\r\n      // 例：解析 hello{{ name }}hello 中的 {{ name }} 前面的 hello\r\n      if (index > lastIndex) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n      }\r\n      // 例：解析 hello{{ name }}hello 中的 {{ name }}\r\n      tokens.push(`_s(${match[1].trim()})`);\r\n      lastIndex = index + match[0].length;\r\n    }\r\n    // 例：解析 hello{{ name }} hello 中的 {{ name }} 后面的 hello\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n    }\r\n    // 将结果拼接上 +\r\n    return `_v(${tokens.join('+')})`;\r\n  }\r\n}\r\n\r\n// 处理属性  拼接成属性的字符串\r\nfunction genProps(attrs) {\r\n  let str = '';\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    // 解析 style\r\n    if (attr.name === \"style\") {\r\n      // style=\"color: red;\" => {style: {color:'red'}}\r\n      let obj = {};\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':');\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    // 拼接上 ,\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  // 去掉最后一个 ,\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nfunction genChildren(el) {\r\n  let children = el.children;\r\n  if (children && children.length > 0) {\r\n    return `${children.map(c => gen(c)).join(',')}`;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n// 递归创建\r\nexport function generate(el) {\r\n  // 获取子节点\r\n  let children = genChildren(el);\r\n  let code = `_c(\"${el.tag}\",${el.attrs.length ? genProps(el.attrs) : 'undefined'\r\n    }${children ? `,${children}` : ''\r\n    })`;\r\n\r\n  return code\r\n}","import { parseHTML } from './paser-html';\r\nimport { generate } from './generate';\r\n\r\n// ast语法树 是用对象描述原生语法   虚拟dom用对象描述dom节点\r\nexport function compilerToFunction(template) {\r\n  // 1) 解析html字符串 将html字符串 -> ast语法树\r\n  console.log(template);\r\n  let root = parseHTML(template);\r\n  // 需要将ast语法树生成最终的render函数，就是字符串拼接(模板引擎)\r\n  let code = generate(root);\r\n  console.log('code', code)\r\n  // 核心思路就是模板转化成 下面这段字符串\r\n  // <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n  // _c('div', {id:app}, _c('p', undefined, _v('hello'+_s(name))), _v('hello))\r\n  // 将ast树，再次转换成js的语法\r\n\r\n  // 所有的模板引擎实现，都需要new Function + with\r\n  let renderFn = new Function(`with(this){return ${code}}`);\r\n  console.log(renderFn)\r\n\r\n  // vue的render 返回的是虚拟dom\r\n  return renderFn;\r\n}","let callbacks = [];\r\n\r\nlet waiting = false;\r\n\r\nfunction flushCallback() {\r\n  callbacks.forEach(cb => cb());\r\n  waiting = false;\r\n  callbacks = [];\r\n}\r\n\r\nexport function nextTick(cb) {\r\n  // 多次调用nextTick 如果没有刷新的时候，就先把他放到数组中，刷新后更改waiting\r\n  callbacks.push(cb);\r\n  if (waiting === false) {\r\n    setTimeout(flushCallback, 0);\r\n    waiting = true;\r\n  }\r\n}\r\n","import { nextTick } from '../util/next-tick';\r\n\r\nlet queue = [];\r\nlet has = {};\r\n\r\nfunction flushSchedularQueue() {\r\n  queue.forEach(watcher => watcher.run());\r\n  queue = []; // 让下次可以继续使用 \r\n  has = {};\r\n}\r\n\r\nexport function queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n  if (has[id] == null) {\r\n    queue.push(watcher);\r\n    has[id] = true;\r\n\r\n    // 宏任务和微任务 (vue中使用了Vue.nextTick)\r\n    // Vuew.nextTick = promise / mutationObserver / setImmediate / setTimeout\r\n    nextTick(flushSchedularQueue)\r\n  }\r\n}\r\n","import { pushTarget, popTarget } from './dep.js';\r\nimport { queueWatcher } from './schedule';\r\n\r\nlet id = 0;\r\n\r\nclass Wathcer {\r\n  constructor(vm, exprOrFn, callback, options) {\r\n    this.vm = vm;\r\n    this.callback = callback;\r\n    this.options = options;\r\n    this.id = id++;\r\n    this.getter = exprOrFn; // 将内部传过来的回调函数 放到getter属性上\r\n    this.depsId = new Set(); // es6中的集合（不能放重复项）\r\n    this.deps = [];\r\n\r\n    this.get(); // 调用get方法 会让渲染watcher执行\r\n  }\r\n  // watcher 里不能放重复的dep dep里不能放重复的watcher\r\n  addDep(dep) {\r\n    let id = dep.id;\r\n    if (!this.depsId.has(id)) {\r\n      this.depsId.add(id);\r\n      this.deps.push(dep);\r\n      dep.addSub(this);\r\n    }\r\n  }\r\n\r\n  get() {\r\n    pushTarget(this); // 把watcher存起来\r\n    this.getter();  // 渲染watcher执行\r\n    popTarget(); // 移除watcher\r\n  }\r\n  update() {\r\n    // 等待着 一起更新 因为每次调用update的时候 都放入了watcher\r\n    // this.get()\r\n    // ----- 添加代码\r\n    queueWatcher(this);\r\n    // -----\r\n  }\r\n  // ----- 添加代码\r\n  run() {\r\n    this.get();\r\n  }\r\n  // -----\r\n}\r\n\r\n// ----- 添加代码\r\n// let queue = [];\r\n// let has = {};\r\n\r\n// function queueWatcher(watcher) {\r\n//   const id = watcher.id;\r\n//   if (has[id] == null) {\r\n//     queue.push(watcher);\r\n//     has[id] = true;\r\n//     setTimeout(function () {\r\n//       queue.forEach(watcher => watcher.run())\r\n//       queue = [];\r\n//       has = {};\r\n//     })\r\n//   }\r\n// }\r\n// -----\r\nexport default Wathcer;\r\n","export function patch(oldVnode, vnode) {\r\n  // 判断是更新还是要渲染\r\n  const isRealElement = oldVnode.nodeType;\r\n  if (isRealElement) { // 第一次渲染，oldVnode是真实dom\r\n    const oldElm = oldVnode; // div id = \"app\"\r\n    const parentElm = oldElm.parentNode; // body\r\n\r\n    // 递归创建真实节点  替换掉老的节点\r\n    let el = createElm(vnode);\r\n    // 添加新的dom\r\n    parentElm.insertBefore(el, oldElm.nextSibling);\r\n    // 删除旧的dom\r\n    parentElm.removeChild(oldElm);\r\n\r\n    // 需要将渲染好的结果返回\r\n    return el;\r\n  }\r\n}\r\n\r\n// 根据虚拟节点创建真实的节点\r\nfunction createElm(vnode) {\r\n  let { tag, children, key, data, text } = vnode;\r\n  // 是标签就创建标签\r\n  if (typeof tag === 'string') {\r\n    vnode.el = document.createElement(tag);\r\n    // 更新属性\r\n    updateProperties(vnode);\r\n    // 递归创建子节点，将子节点添加到父节点上\r\n    children.forEach(child => {\r\n      return vnode.el.appendChild(createElm(child));\r\n    })\r\n  } else {\r\n    // 如果不是标签就是文本\r\n    // 虚拟dom上映射着真实dom 方便后续更新操作\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n\r\n  return vnode.el;\r\n}\r\n\r\n// 更新属性\r\nfunction updateProperties(vnode) {\r\n  let newProps = vnode.data || {};\r\n  let el = vnode.el;\r\n  for (let key in newProps) {\r\n    if (key === 'style') {\r\n      for (let styleName in newProps.style) {\r\n        el.style[styleName] = newProps.style[styleName];\r\n      }\r\n    } else if (key === 'class') {\r\n      el.className = newProps.class;\r\n    } else {\r\n      el.setAttribute(key, newProps[key])\r\n    }\r\n  }\r\n}\r\n","import Watcher from './observer/watcher';\r\nimport { patch } from './vdom/patch';\r\n\r\nexport function lifecycleMixin(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    // 通过虚拟节点，渲染出真实的dom\r\n    vm.$el = patch(vm.$el, vnode);  // 需要用虚拟节点创建真实节点 替换 真实的$el\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  const options = vm.$options;\r\n  vm.$el = el; // 真实的dom元素\r\n  // 渲染页面\r\n  let updateComponent = () => { // 无论是渲染还是更新都会调用此方法\r\n    // 返回的是虚拟dom\r\n    console.log(\"watcher\");\r\n    vm._update(vm._render());\r\n  }\r\n  // 渲染watcher 每个组件都有一个watcher vm.$watch(()=>{})\r\n  new Watcher(vm, updateComponent, () => { }, true) // true 表示他是一个渲染watcher\r\n}","import { initState } from \"./state\";\r\nimport { compilerToFunction } from './compiler/index';\r\nimport { mountComponent } from './lifeCycle';\r\nimport { nextTick } from './util/next-tick';\r\n\r\n// 在原型上添加一个init方法\r\nexport function initMixin(Vue) {\r\n  // 初始化流程\r\n  Vue.prototype._init = function (options) {\r\n    // 数据劫持\r\n    const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\r\n    vm.$options = options;\r\n    // 初始化状体\r\n    initState(vm);\r\n    // ---------添加部分\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n    // ---------\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n    // 默认先查找有没有render方法，没有render再采用template，template也没有再使用 el 中的内容\r\n    if (!options.render) {\r\n      // 对模板进行编译\r\n      let template = options.template; // 取出模板\r\n      if (!template && el) {\r\n        template = el.outerHTML;\r\n      }\r\n      // 编译\r\n      const render = compilerToFunction(template);\r\n      console.log('render', render);\r\n      options.render = render;\r\n      // 我们需要将template 转化成render方法vue1.0 2.0 虚拟dom\r\n      console.log('options', options);\r\n    }\r\n\r\n    // 渲染当前的组件，挂载这个组件\r\n    mountComponent(vm, el);\r\n  }\r\n\r\n  // 用户调用的nextTick\r\n  Vue.prototype.$nextTick = nextTick\r\n}\r\n","export function createElement(tag, data = {}, ...children) {\r\n  let key = data.key;\r\n  if (key) {\r\n    delete data.key;\r\n  }\r\n  // 返回标签节点\r\n  return vnode(tag, data, key, children, undefined)\r\n}\r\nexport function createTextNode(text) {\r\n  // 文本节点只需要返回 text 文本\r\n  return vnode(undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nfunction vnode(tag, data, key, children, text) {\r\n\r\n  return {\r\n    tag, data, key, children, text\r\n  }\r\n}\r\n\r\n// 虚拟节点  就是通过 _c _v 实现用对象来描述dom的操作(对象)\r\n\r\n// 1) 将template转换成ast语法树 => 生成render方法 => 生成虚拟dom => 真实的dom\r\n// 重新生成虚拟dom => 更新dom","import { createElement, createTextNode } from './vdom/create-element'\r\n\r\nexport function renderMixin(Vue) {\r\n  // _c 创建元素的虚拟节点\r\n  // _v 创建文本的虚拟节点\r\n  // _s JSON.stringify\r\n\r\n  Vue.prototype._c = function () {\r\n    return createElement(...arguments); // tag, data, children1, children2\r\n  }\r\n  Vue.prototype._v = function (text) {\r\n    return createTextNode(text);\r\n  }\r\n  Vue.prototype._s = function (val) {\r\n    return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val)\r\n  }\r\n  // ----- 添加代码\r\n  Vue.prototype._render = function () {\r\n    const vm = this;\r\n\r\n    const { render } = vm.$options;\r\n    // 去实例上取值\r\n    let vnode = render.call(vm);\r\n\r\n    return vnode;\r\n  }\r\n  // -----\r\n}\r\n","import { initMixin } from './init';\r\nimport { renderMixin } from './render';\r\nimport { lifecycleMixin } from './lifeCycle';\r\n\r\n// Vue的核心代码\r\nfunction Vue(options) {\r\n  // 进行Vue的初始化操作\r\n  this._init(options);\r\n}\r\n// 通过引入文件的方式，给Vue原型上添加方法\r\ninitMixin(Vue);\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","result","apply","inserted","ob","__ob__","splice","observeArray","dep","notify","id","Dep","constructor","subs","addSub","watcher","push","depend","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","value","defineProperty","enumerable","configurable","isArray","__proto__","walk","i","observe","data","keys","key","defineReactive","childOb","get","dependArray","set","newValue","current","initState","vm","opts","$options","props","initData","computed","watch","proxy","source","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","gen","node","generate","lastIndex","tokens","index","exec","JSON","stringify","slice","trim","join","genProps","str","obj","split","item","genChildren","el","map","c","code","compilerToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","cb","nextTick","setTimeout","queue","has","flushSchedularQueue","run","queueWatcher","Wathcer","exprOrFn","callback","options","getter","depsId","Set","deps","add","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","class","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","Watcher","initMixin","_init","$mount","querySelector","render","outerHTML","$nextTick","undefined","renderMixin","_c","arguments","_v","_s","val"],"mappings":"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"}